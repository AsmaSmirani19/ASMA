// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: test.proto

package testpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===== Message de configuration =====
type TestParameters struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SourceIp       string                 `protobuf:"bytes,1,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	SourcePort     int32                  `protobuf:"varint,2,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	TargetIp       string                 `protobuf:"bytes,3,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	TargetPort     int32                  `protobuf:"varint,4,opt,name=target_port,json=targetPort,proto3" json:"target_port,omitempty"`
	DurationSec    int32                  `protobuf:"varint,5,opt,name=duration_sec,json=durationSec,proto3" json:"duration_sec,omitempty"`
	PacketSize     int32                  `protobuf:"varint,6,opt,name=packet_size,json=packetSize,proto3" json:"packet_size,omitempty"`
	IntervalMillis int32                  `protobuf:"varint,7,opt,name=interval_millis,json=intervalMillis,proto3" json:"interval_millis,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TestParameters) Reset() {
	*x = TestParameters{}
	mi := &file_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestParameters) ProtoMessage() {}

func (x *TestParameters) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestParameters.ProtoReflect.Descriptor instead.
func (*TestParameters) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *TestParameters) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *TestParameters) GetSourcePort() int32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *TestParameters) GetTargetIp() string {
	if x != nil {
		return x.TargetIp
	}
	return ""
}

func (x *TestParameters) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

func (x *TestParameters) GetDurationSec() int32 {
	if x != nil {
		return x.DurationSec
	}
	return 0
}

func (x *TestParameters) GetPacketSize() int32 {
	if x != nil {
		return x.PacketSize
	}
	return 0
}

func (x *TestParameters) GetIntervalMillis() int32 {
	if x != nil {
		return x.IntervalMillis
	}
	return 0
}

// ===== Nouveau : Profile =====
type Profile struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SendingInterval int64                  `protobuf:"varint,2,opt,name=sending_interval,json=sendingInterval,proto3" json:"sending_interval,omitempty"` // en nanosecondes
	PacketSize      int32                  `protobuf:"varint,3,opt,name=packet_size,json=packetSize,proto3" json:"packet_size,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *Profile) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Profile) GetSendingInterval() int64 {
	if x != nil {
		return x.SendingInterval
	}
	return 0
}

func (x *Profile) GetPacketSize() int32 {
	if x != nil {
		return x.PacketSize
	}
	return 0
}

// ===== Nouveau : TestConfig complet =====
type TestConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TestId         int32                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Duration       int64                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	NumberOfAgents int32                  `protobuf:"varint,4,opt,name=number_of_agents,json=numberOfAgents,proto3" json:"number_of_agents,omitempty"`
	SourceId       int32                  `protobuf:"varint,5,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	SourceIp       string                 `protobuf:"bytes,6,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	SourcePort     int32                  `protobuf:"varint,7,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	TargetId       int32                  `protobuf:"varint,8,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	TargetIp       string                 `protobuf:"bytes,9,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	TargetPort     int32                  `protobuf:"varint,10,opt,name=target_port,json=targetPort,proto3" json:"target_port,omitempty"`
	ProfileId      int32                  `protobuf:"varint,11,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Profile        *Profile               `protobuf:"bytes,12,opt,name=profile,proto3" json:"profile,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TestConfig) Reset() {
	*x = TestConfig{}
	mi := &file_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConfig) ProtoMessage() {}

func (x *TestConfig) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConfig.ProtoReflect.Descriptor instead.
func (*TestConfig) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{2}
}

func (x *TestConfig) GetTestId() int32 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *TestConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestConfig) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TestConfig) GetNumberOfAgents() int32 {
	if x != nil {
		return x.NumberOfAgents
	}
	return 0
}

func (x *TestConfig) GetSourceId() int32 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *TestConfig) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *TestConfig) GetSourcePort() int32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *TestConfig) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *TestConfig) GetTargetIp() string {
	if x != nil {
		return x.TargetIp
	}
	return ""
}

func (x *TestConfig) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

func (x *TestConfig) GetProfileId() int32 {
	if x != nil {
		return x.ProfileId
	}
	return 0
}

func (x *TestConfig) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// ===== Messages pour les tests =====
type QuickTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        string                 `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Parameters    *TestParameters        `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Config        *TestConfig            `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"` // ðŸ‘ˆ ajout de la configuration complÃ¨te
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuickTestRequest) Reset() {
	*x = QuickTestRequest{}
	mi := &file_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuickTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickTestRequest) ProtoMessage() {}

func (x *QuickTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickTestRequest.ProtoReflect.Descriptor instead.
func (*QuickTestRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{3}
}

func (x *QuickTestRequest) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *QuickTestRequest) GetParameters() *TestParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *QuickTestRequest) GetConfig() *TestConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type QuickTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "received", "started", "error", etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuickTestResponse) Reset() {
	*x = QuickTestResponse{}
	mi := &file_test_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuickTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickTestResponse) ProtoMessage() {}

func (x *QuickTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickTestResponse.ProtoReflect.Descriptor instead.
func (*QuickTestResponse) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{4}
}

func (x *QuickTestResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type QuickTestMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*QuickTestMessage_Request
	//	*QuickTestMessage_Response
	Message       isQuickTestMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuickTestMessage) Reset() {
	*x = QuickTestMessage{}
	mi := &file_test_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuickTestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickTestMessage) ProtoMessage() {}

func (x *QuickTestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickTestMessage.ProtoReflect.Descriptor instead.
func (*QuickTestMessage) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{5}
}

func (x *QuickTestMessage) GetMessage() isQuickTestMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *QuickTestMessage) GetRequest() *QuickTestRequest {
	if x != nil {
		if x, ok := x.Message.(*QuickTestMessage_Request); ok {
			return x.Request
		}
	}
	return nil
}

func (x *QuickTestMessage) GetResponse() *QuickTestResponse {
	if x != nil {
		if x, ok := x.Message.(*QuickTestMessage_Response); ok {
			return x.Response
		}
	}
	return nil
}

type isQuickTestMessage_Message interface {
	isQuickTestMessage_Message()
}

type QuickTestMessage_Request struct {
	Request *QuickTestRequest `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

type QuickTestMessage_Response struct {
	Response *QuickTestResponse `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

func (*QuickTestMessage_Request) isQuickTestMessage_Message() {}

func (*QuickTestMessage_Response) isQuickTestMessage_Message() {}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_test_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{6}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "OK" ou "FAIL"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_test_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_test_proto protoreflect.FileDescriptor

const file_test_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"test.proto\x12\x06testpb\"\xf9\x01\n" +
	"\x0eTestParameters\x12\x1b\n" +
	"\tsource_ip\x18\x01 \x01(\tR\bsourceIp\x12\x1f\n" +
	"\vsource_port\x18\x02 \x01(\x05R\n" +
	"sourcePort\x12\x1b\n" +
	"\ttarget_ip\x18\x03 \x01(\tR\btargetIp\x12\x1f\n" +
	"\vtarget_port\x18\x04 \x01(\x05R\n" +
	"targetPort\x12!\n" +
	"\fduration_sec\x18\x05 \x01(\x05R\vdurationSec\x12\x1f\n" +
	"\vpacket_size\x18\x06 \x01(\x05R\n" +
	"packetSize\x12'\n" +
	"\x0finterval_millis\x18\a \x01(\x05R\x0eintervalMillis\"e\n" +
	"\aProfile\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12)\n" +
	"\x10sending_interval\x18\x02 \x01(\x03R\x0fsendingInterval\x12\x1f\n" +
	"\vpacket_size\x18\x03 \x01(\x05R\n" +
	"packetSize\"\xff\x02\n" +
	"\n" +
	"TestConfig\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x05R\x06testId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x03R\bduration\x12(\n" +
	"\x10number_of_agents\x18\x04 \x01(\x05R\x0enumberOfAgents\x12\x1b\n" +
	"\tsource_id\x18\x05 \x01(\x05R\bsourceId\x12\x1b\n" +
	"\tsource_ip\x18\x06 \x01(\tR\bsourceIp\x12\x1f\n" +
	"\vsource_port\x18\a \x01(\x05R\n" +
	"sourcePort\x12\x1b\n" +
	"\ttarget_id\x18\b \x01(\x05R\btargetId\x12\x1b\n" +
	"\ttarget_ip\x18\t \x01(\tR\btargetIp\x12\x1f\n" +
	"\vtarget_port\x18\n" +
	" \x01(\x05R\n" +
	"targetPort\x12\x1d\n" +
	"\n" +
	"profile_id\x18\v \x01(\x05R\tprofileId\x12)\n" +
	"\aprofile\x18\f \x01(\v2\x0f.testpb.ProfileR\aprofile\"\x8f\x01\n" +
	"\x10QuickTestRequest\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\tR\x06testId\x126\n" +
	"\n" +
	"parameters\x18\x02 \x01(\v2\x16.testpb.TestParametersR\n" +
	"parameters\x12*\n" +
	"\x06config\x18\x03 \x01(\v2\x12.testpb.TestConfigR\x06config\"+\n" +
	"\x11QuickTestResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\x8c\x01\n" +
	"\x10QuickTestMessage\x124\n" +
	"\arequest\x18\x01 \x01(\v2\x18.testpb.QuickTestRequestH\x00R\arequest\x127\n" +
	"\bresponse\x18\x02 \x01(\v2\x19.testpb.QuickTestResponseH\x00R\bresponseB\t\n" +
	"\amessage\"\x14\n" +
	"\x12HealthCheckRequest\"-\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2Y\n" +
	"\vTestService\x12J\n" +
	"\x10PerformQuickTest\x12\x18.testpb.QuickTestMessage\x1a\x18.testpb.QuickTestMessage(\x010\x012P\n" +
	"\x06Health\x12F\n" +
	"\vHealthCheck\x12\x1a.testpb.HealthCheckRequest\x1a\x1b.testpb.HealthCheckResponseB\n" +
	"Z\b./testpbb\x06proto3"

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData []byte
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)))
	})
	return file_test_proto_rawDescData
}

var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_test_proto_goTypes = []any{
	(*TestParameters)(nil),      // 0: testpb.TestParameters
	(*Profile)(nil),             // 1: testpb.Profile
	(*TestConfig)(nil),          // 2: testpb.TestConfig
	(*QuickTestRequest)(nil),    // 3: testpb.QuickTestRequest
	(*QuickTestResponse)(nil),   // 4: testpb.QuickTestResponse
	(*QuickTestMessage)(nil),    // 5: testpb.QuickTestMessage
	(*HealthCheckRequest)(nil),  // 6: testpb.HealthCheckRequest
	(*HealthCheckResponse)(nil), // 7: testpb.HealthCheckResponse
}
var file_test_proto_depIdxs = []int32{
	1, // 0: testpb.TestConfig.profile:type_name -> testpb.Profile
	0, // 1: testpb.QuickTestRequest.parameters:type_name -> testpb.TestParameters
	2, // 2: testpb.QuickTestRequest.config:type_name -> testpb.TestConfig
	3, // 3: testpb.QuickTestMessage.request:type_name -> testpb.QuickTestRequest
	4, // 4: testpb.QuickTestMessage.response:type_name -> testpb.QuickTestResponse
	5, // 5: testpb.TestService.PerformQuickTest:input_type -> testpb.QuickTestMessage
	6, // 6: testpb.Health.HealthCheck:input_type -> testpb.HealthCheckRequest
	5, // 7: testpb.TestService.PerformQuickTest:output_type -> testpb.QuickTestMessage
	7, // 8: testpb.Health.HealthCheck:output_type -> testpb.HealthCheckResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	file_test_proto_msgTypes[5].OneofWrappers = []any{
		(*QuickTestMessage_Request)(nil),
		(*QuickTestMessage_Response)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
